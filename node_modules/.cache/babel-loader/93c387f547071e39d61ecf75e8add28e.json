{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN_SUCCESS, LOGIN_ERROR, LOGIN_LOADING, USER_LOADING, USER_LOADED, AUTH_ERROR, RESET_PASS_LOADING, LOGOUT_LOADING, LOGOUT_SUCCESS, LOGOUT_ERROR, REGISTER_LOADING, REGISTER_SUCCESS, REGISTER_ERROR, GET_ERRORS, FETCH_PROFILE_LOADING, FETCH_PROFILE_SUCCESS, FETCH_PROFILE_ERROR, CHANGE_PASS_LOADING, CHANGE_PASS_SUCCESS, CHANGE_PASS_ERROR } from \"../types\";\nimport { loginURL, userURL, resetPassURL, logOutURL, registerURL, subscribeURL, userProfileURL, changePasswordURL } from \"../../constant\";\nimport { authAxios, tokenConfig } from \"../../utils\";\nimport { createMessage } from \"./messages\";\nimport { config } from \"../../utils\"; // Subscribe\n\nexport const subscribe = email => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  axios.post(subscribeURL, email, config).then(res => {\n    dispatch(createMessage({\n      subscribeMsg: \"You've successfully subscribed to our Newsletter\"\n    }));\n  }).catch(err => {\n    const errors = {\n      msg: err.response.data,\n      status: err.response.status\n    };\n    dispatch({\n      type: GET_ERRORS,\n      payload: errors\n    });\n  });\n}; // LOG IN\n\nexport const login = (email, password) => dispatch => {\n  dispatch({\n    type: LOGIN_LOADING\n  });\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  axios.post(loginURL, body, config).then(res => {\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    const errors = {\n      msg: err === null || err === void 0 ? void 0 : err.response.data,\n      status: err === null || err === void 0 ? void 0 : err.response.status\n    };\n    dispatch({\n      type: GET_ERRORS,\n      payload: errors\n    });\n    dispatch({\n      type: LOGIN_ERROR\n    });\n  });\n}; // REGISTER\n\nexport const register = (email, username, password) => dispatch => {\n  dispatch({\n    type: REGISTER_LOADING\n  });\n  const body = JSON.stringify({\n    email,\n    username,\n    password\n  });\n  axios.post(registerURL, body, config).then(res => {\n    dispatch(createMessage({\n      registerMsg: `We've sent an email to ${email}. Open it up to activate your account.`\n    }));\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n  }).catch(err => {\n    dispatch(createMessage({\n      registerError: err.error\n    }));\n    dispatch({\n      type: REGISTER_ERROR\n    });\n  });\n}; // Get User\n\nexport const getUser = () => (dispatch, getState) => {\n  //User loading\n  dispatch({\n    type: USER_LOADING\n  });\n  axios.get(userURL, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n}; // Logout User\n\nexport const logOut = () => (dispatch, getState) => {\n  //User loading\n  dispatch({\n    type: LOGOUT_LOADING\n  });\n  axios.post(logOutURL, null, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  }).catch(err => {\n    dispatch({\n      type: LOGOUT_ERROR\n    });\n  });\n}; // Reset Password\n\nexport const resetPass = email => dispatch => {\n  dispatch({\n    type: RESET_PASS_LOADING\n  });\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n  axios.post(resetPassURL, body, config).then(res => {\n    dispatch(createMessage({\n      resetMsg: \"We have sent you a link to reset your password.\"\n    }));\n  }).catch(err => {\n    console.log(err);\n  });\n}; // User Profile\n\nexport const fetchProfile = () => dispatch => {\n  dispatch({\n    type: FETCH_PROFILE_LOADING\n  });\n  authAxios.get(userProfileURL).then(res => {\n    dispatch({\n      type: FETCH_PROFILE_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_PROFILE_ERROR,\n      payload: err\n    });\n  });\n}; // Change Password\n\nexport const changePassword = data => dispatch => {\n  dispatch({\n    type: CHANGE_PASS_LOADING\n  });\n  authAxios.put(changePassword, data, config).then(res => {\n    dispatch({\n      type: CHANGE_PASS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: CHANGE_PASS_ERROR,\n      payload: err\n    });\n  });\n}; // REGISTER\n// export const register = ({\n//   email,\n//   first_name,\n//   last_name,\n//   password,\n//   password2,\n// }) => (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({\n//     email,\n//     first_name,\n//     last_name,\n//     password,\n//     password2,\n//   });\n//   axios\n//     .post(`${baseUrl}/api/auth/register`, body, config)\n//     .then((res) => {\n//       dispatch({\n//         type: REGISTER_SUCCESS,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => {\n//       dispatch({\n//         type: REGISTER_ERROR,\n//       });\n//     });\n// };\n// LOG OUT\n// export const logout = () => (dispatch, getState) => {\n//   axios\n//     .post(`${baseUrl}/api/auth/logout`, null, tokenConfig(getState))\n//     .then((res) => {\n//       dispatch({\n//         type: LOGOUT_SUCCESS,\n//       });\n//     })\n//     .catch((err) => {\n//       dispatch({\n//         type: AUTH_ERROR,\n//       });\n//     });\n// };\n// VALIDATE EMAIL\n// export const validateEmail = (email) => (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ email });\n//   axios\n//     .post(`${baseUrl}/api/auth/validate-email`, body, config)\n//     .then((res) => {\n//       dispatch({\n//         type: VALIDATE_EMAIL,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => console.log(\"ERROR\", err));\n// };\n// VALIDATE FIRSTNAME\n// export const validateFirstname = (first_name) => (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ first_name });\n//   axios\n//     .post(`${baseUrl}/api/auth/validate-firstname`, body, config)\n//     .then((res) => {\n//       dispatch({\n//         type: VALIDATE_FIRSTNAME,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => console.log(\"ERROR\", err));\n// };\n// // VALIDATE LASTNAME\n// export const validateLastname = (last_name) => (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ last_name });\n//   axios\n//     .post(`${baseUrl}/api/auth/validate-lastname`, body, config)\n//     .then((res) => {\n//       dispatch({\n//         type: VALIDATE_LASTNAME,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => console.log(\"ERROR\", err));\n// };\n// // VALIDATE PASSWORD\n// export const validatePassword = (password) => (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ password });\n//   axios\n//     .post(`${baseUrl}/api/auth/validate-password`, body, config)\n//     .then((res) => {\n//       dispatch({\n//         type: VALIDATE_PASSWORD,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => console.log(\"ERROR\", err));\n// };\n// // VALIDATE PASSWORD\n// export const confirmPassword = (password, password2) => (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ password, password2 });\n//   axios\n//     .post(`${baseUrl}/api/auth/confirm-password`, body, config)\n//     .then((res) => {\n//       console.log(res.data);\n//       dispatch({\n//         type: CONFIRM_PASSWORD,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => console.log(\"ERROR\", err));\n// };\n// // Helper function\n// export const tokenConfig = (getState) => {\n//   // Get token\n//   const token = getState().auth.token;\n//   // Add\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   // Add token to config\n//   if (token) {\n//     config.headers[\"Authorization\"] = `Token ${token}`;\n//   }\n//   return config;\n// };","map":{"version":3,"sources":["D:/download/.New folder (2)/hair shop/UI/src/redux/action/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_ERROR","LOGIN_LOADING","USER_LOADING","USER_LOADED","AUTH_ERROR","RESET_PASS_LOADING","LOGOUT_LOADING","LOGOUT_SUCCESS","LOGOUT_ERROR","REGISTER_LOADING","REGISTER_SUCCESS","REGISTER_ERROR","GET_ERRORS","FETCH_PROFILE_LOADING","FETCH_PROFILE_SUCCESS","FETCH_PROFILE_ERROR","CHANGE_PASS_LOADING","CHANGE_PASS_SUCCESS","CHANGE_PASS_ERROR","loginURL","userURL","resetPassURL","logOutURL","registerURL","subscribeURL","userProfileURL","changePasswordURL","authAxios","tokenConfig","createMessage","config","subscribe","email","dispatch","headers","post","then","res","subscribeMsg","catch","err","errors","msg","response","data","status","type","payload","login","password","body","JSON","stringify","localStorage","setItem","token","register","username","registerMsg","registerError","error","getUser","getState","get","logOut","resetPass","resetMsg","console","log","fetchProfile","changePassword","put"],"mappings":"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":["import axios from \"axios\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  LOGIN_LOADING,\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  RESET_PASS_LOADING,\r\n  LOGOUT_LOADING,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_ERROR,\r\n  REGISTER_LOADING,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_ERROR,\r\n  GET_ERRORS,\r\n  FETCH_PROFILE_LOADING,\r\n  FETCH_PROFILE_SUCCESS,\r\n  FETCH_PROFILE_ERROR,\r\n  CHANGE_PASS_LOADING,\r\n  CHANGE_PASS_SUCCESS,\r\n  CHANGE_PASS_ERROR,\r\n} from \"../types\";\r\nimport {\r\n  loginURL,\r\n  userURL,\r\n  resetPassURL,\r\n  logOutURL,\r\n  registerURL,\r\n  subscribeURL,\r\n  userProfileURL,\r\n  changePasswordURL,\r\n} from \"../../constant\";\r\nimport { authAxios, tokenConfig } from \"../../utils\";\r\nimport { createMessage } from \"./messages\";\r\nimport { config } from \"../../utils\";\r\n\r\n// Subscribe\r\nexport const subscribe = (email) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  axios\r\n    .post(subscribeURL, email, config)\r\n    .then((res) => {\r\n      dispatch(\r\n        createMessage({\r\n          subscribeMsg: \"You've successfully subscribed to our Newsletter\",\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors,\r\n      });\r\n    });\r\n};\r\n\r\n// LOG IN\r\nexport const login = (email, password) => (dispatch) => {\r\n  dispatch({ type: LOGIN_LOADING });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n  axios\r\n    .post(loginURL, body, config)\r\n    .then((res) => {\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const errors = {\r\n        msg: err?.response.data,\r\n        status: err?.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors,\r\n      });\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\n// REGISTER\r\nexport const register = (email, username, password) => (dispatch) => {\r\n  dispatch({ type: REGISTER_LOADING });\r\n\r\n  const body = JSON.stringify({ email, username, password });\r\n  axios\r\n    .post(registerURL, body, config)\r\n    .then((res) => {\r\n      dispatch(\r\n        createMessage({\r\n          registerMsg: `We've sent an email to ${email}. Open it up to activate your account.`,\r\n        })\r\n      );\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(\r\n        createMessage({\r\n          registerError: err.error,\r\n        })\r\n      );\r\n      dispatch({\r\n        type: REGISTER_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\n// Get User\r\nexport const getUser = () => (dispatch, getState) => {\r\n  //User loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get(userURL, tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\n// Logout User\r\nexport const logOut = () => (dispatch, getState) => {\r\n  //User loading\r\n  dispatch({ type: LOGOUT_LOADING });\r\n\r\n  axios\r\n    .post(logOutURL, null, tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: LOGOUT_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\n// Reset Password\r\nexport const resetPass = (email) => (dispatch) => {\r\n  dispatch({ type: RESET_PASS_LOADING });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email });\r\n\r\n  axios\r\n    .post(resetPassURL, body, config)\r\n    .then((res) => {\r\n      dispatch(\r\n        createMessage({\r\n          resetMsg: \"We have sent you a link to reset your password.\",\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// User Profile\r\nexport const fetchProfile = () => (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_PROFILE_LOADING,\r\n  });\r\n  authAxios\r\n    .get(userProfileURL)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: FETCH_PROFILE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: FETCH_PROFILE_ERROR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\n// Change Password\r\nexport const changePassword = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CHANGE_PASS_LOADING,\r\n  });\r\n  authAxios\r\n    .put(changePassword, data, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: CHANGE_PASS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: CHANGE_PASS_ERROR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\n// REGISTER\r\n// export const register = ({\r\n//   email,\r\n//   first_name,\r\n//   last_name,\r\n//   password,\r\n//   password2,\r\n// }) => (dispatch) => {\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const body = JSON.stringify({\r\n//     email,\r\n//     first_name,\r\n//     last_name,\r\n//     password,\r\n//     password2,\r\n//   });\r\n\r\n//   axios\r\n//     .post(`${baseUrl}/api/auth/register`, body, config)\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: REGISTER_SUCCESS,\r\n//         payload: res.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch({\r\n//         type: REGISTER_ERROR,\r\n//       });\r\n//     });\r\n// };\r\n\r\n// LOG OUT\r\n// export const logout = () => (dispatch, getState) => {\r\n//   axios\r\n//     .post(`${baseUrl}/api/auth/logout`, null, tokenConfig(getState))\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: LOGOUT_SUCCESS,\r\n//       });\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch({\r\n//         type: AUTH_ERROR,\r\n//       });\r\n//     });\r\n// };\r\n\r\n// VALIDATE EMAIL\r\n// export const validateEmail = (email) => (dispatch) => {\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const body = JSON.stringify({ email });\r\n\r\n//   axios\r\n//     .post(`${baseUrl}/api/auth/validate-email`, body, config)\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: VALIDATE_EMAIL,\r\n//         payload: res.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => console.log(\"ERROR\", err));\r\n// };\r\n\r\n// VALIDATE FIRSTNAME\r\n// export const validateFirstname = (first_name) => (dispatch) => {\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const body = JSON.stringify({ first_name });\r\n\r\n//   axios\r\n//     .post(`${baseUrl}/api/auth/validate-firstname`, body, config)\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: VALIDATE_FIRSTNAME,\r\n//         payload: res.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => console.log(\"ERROR\", err));\r\n// };\r\n\r\n// // VALIDATE LASTNAME\r\n// export const validateLastname = (last_name) => (dispatch) => {\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const body = JSON.stringify({ last_name });\r\n\r\n//   axios\r\n//     .post(`${baseUrl}/api/auth/validate-lastname`, body, config)\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: VALIDATE_LASTNAME,\r\n//         payload: res.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => console.log(\"ERROR\", err));\r\n// };\r\n\r\n// // VALIDATE PASSWORD\r\n// export const validatePassword = (password) => (dispatch) => {\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const body = JSON.stringify({ password });\r\n\r\n//   axios\r\n//     .post(`${baseUrl}/api/auth/validate-password`, body, config)\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: VALIDATE_PASSWORD,\r\n//         payload: res.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => console.log(\"ERROR\", err));\r\n// };\r\n\r\n// // VALIDATE PASSWORD\r\n// export const confirmPassword = (password, password2) => (dispatch) => {\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const body = JSON.stringify({ password, password2 });\r\n\r\n//   axios\r\n//     .post(`${baseUrl}/api/auth/confirm-password`, body, config)\r\n//     .then((res) => {\r\n//       console.log(res.data);\r\n\r\n//       dispatch({\r\n//         type: CONFIRM_PASSWORD,\r\n//         payload: res.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => console.log(\"ERROR\", err));\r\n// };\r\n\r\n// // Helper function\r\n// export const tokenConfig = (getState) => {\r\n//   // Get token\r\n//   const token = getState().auth.token;\r\n\r\n//   // Add\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   // Add token to config\r\n//   if (token) {\r\n//     config.headers[\"Authorization\"] = `Token ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}