{"ast":null,"code":"var _jsxFileName = \"D:\\\\download\\\\.New folder (2)\\\\hair shop\\\\UI\\\\src\\\\modals\\\\AddAddress\\\\AddAddress.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { IoMdClose } from \"react-icons/io\";\nimport { addAddress } from \"../../redux/action/address\";\nimport \"./style.css\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"semantic-ui-react\";\nimport { countyListURL, cityListURL } from \"../../constant\";\nimport { authAxios } from \"../../utils\";\n\nconst AddAddress = () => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [apartment, setApartment] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [county, setCounty] = useState(\"\");\n  const [userID, setUserID] = useState(null);\n  const [counties, setCounties] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [makeDefault, setMakeDefault] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [details, setDetails] = useState(null);\n  const [update, setUpdate] = useState(false);\n  useEffect(() => {\n    handleFetchCounties();\n    handleFetchCities();\n  }, []);\n\n  const handleFormatData = counties => {\n    const keys = Object.keys(counties);\n    return keys.map(k => {\n      return {\n        key: k,\n        text: counties[k],\n        value: k\n      };\n    });\n  };\n\n  const handleFetchCounties = () => {\n    authAxios.get(countyListURL).then(res => {\n      setCounties(handleFormatData(res.data));\n    }).catch(err => {\n      setError(err);\n    });\n  };\n\n  const handleFetchCities = () => {\n    authAxios.get(cityListURL).then(res => {\n      setCities(handleFormatData(res.data));\n    }).catch(err => {\n      setError(err);\n    });\n  };\n\n  const handleSubmitAddress = e => {\n    e.preventDefault();\n    const data = {\n      contact,\n      first_name: firstname,\n      last_name: lastname,\n      address,\n      apartment,\n      city,\n      county_or_region: county,\n      postal_code: postalCode,\n      default: makeDefault\n    };\n    console.log(data);\n  };\n\n  const closeModal = () => {\n    document.querySelector(\".modal-overlay\").classList.add(\"hide\");\n    document.querySelector(\".add-address\").classList.add(\"hide\");\n  };\n\n  if (success) {\n    closeModal();\n  }\n\n  window.addEventListener(\"click\", e => {\n    if (e.target.classList.contains(\"modal-overlay\")) {\n      document.querySelector(\".modal-overlay\").classList.add(\"hide\");\n      document.querySelector(\".add-address\").classList.add(\"hide\");\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay hide add-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Add New Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-title__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IoMdClose, {\n    onClick: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"shipping-form\",\n    onSubmit: e => handleSubmitAddress(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shipping-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group firstname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"First name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: firstname,\n    onChange: e => setFirstname(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group lastname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Last name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: lastname,\n    onChange: e => setLastname(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group firstname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Mobile number\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"phone_code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"+254\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"E.g 79000000\",\n    value: contact,\n    onChange: e => setContact(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group apartment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"apartment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"Apartment, suite, etc.\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: apartment,\n    onChange: e => setApartment(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"County / Region *\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setCounty(e.target.value),\n    loading: counties.length < 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, \"Please select...\"), counties && counties.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.k,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }\n  }, item.text)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"City *\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setCity(e.target.value),\n    loading: cities.length < 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, \"Please select...\"), cities && cities.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.k,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, item.text))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: makeDefault === true ? true : false,\n    onChange: () => setMakeDefault(!makeDefault),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Make this default address?\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: saving,\n    disabled: saving,\n    type: \"submit\",\n    className: \"checkbox-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"Save\")))));\n};\n\nconst mapStateToProps = state => ({\n  loading: state.address.loading,\n  success: state.address.success\n});\n\nexport default connect(mapStateToProps, {\n  addAddress\n})(AddAddress);","map":{"version":3,"sources":["D:/download/.New folder (2)/hair shop/UI/src/modals/AddAddress/AddAddress.js"],"names":["React","useState","useEffect","IoMdClose","addAddress","connect","Link","Button","countyListURL","cityListURL","authAxios","AddAddress","firstname","setFirstname","lastname","setLastname","contact","setContact","address","setAddress","apartment","setApartment","postalCode","setPostalCode","city","setCity","county","setCounty","userID","setUserID","counties","setCounties","cities","setCities","makeDefault","setMakeDefault","saving","setSaving","error","setError","success","setSuccess","details","setDetails","update","setUpdate","handleFetchCounties","handleFetchCities","handleFormatData","keys","Object","map","k","key","text","value","get","then","res","data","catch","err","handleSubmitAddress","e","preventDefault","first_name","last_name","county_or_region","postal_code","default","console","log","closeModal","document","querySelector","classList","add","window","addEventListener","target","contains","length","item","mapStateToProps","state","loading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { addAddress } from \"../../redux/action/address\";\r\nimport \"./style.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { countyListURL, cityListURL } from \"../../constant\";\r\nimport { authAxios } from \"../../utils\";\r\n\r\nconst AddAddress = () => {\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [apartment, setApartment] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [county, setCounty] = useState(\"\");\r\n  const [userID, setUserID] = useState(null);\r\n  const [counties, setCounties] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [makeDefault, setMakeDefault] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [details, setDetails] = useState(null);\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    handleFetchCounties();\r\n    handleFetchCities();\r\n  }, []);\r\n\r\n  const handleFormatData = (counties) => {\r\n    const keys = Object.keys(counties);\r\n    return keys.map((k) => {\r\n      return {\r\n        key: k,\r\n        text: counties[k],\r\n        value: k,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleFetchCounties = () => {\r\n    authAxios\r\n      .get(countyListURL)\r\n      .then((res) => {\r\n        setCounties(handleFormatData(res.data));\r\n      })\r\n      .catch((err) => {\r\n        setError(err);\r\n      });\r\n  };\r\n\r\n  const handleFetchCities = () => {\r\n    authAxios\r\n      .get(cityListURL)\r\n      .then((res) => {\r\n        setCities(handleFormatData(res.data));\r\n      })\r\n      .catch((err) => {\r\n        setError(err);\r\n      });\r\n  };\r\n\r\n  const handleSubmitAddress = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      contact,\r\n      first_name: firstname,\r\n      last_name: lastname,\r\n      address,\r\n      apartment,\r\n      city,\r\n      county_or_region: county,\r\n      postal_code: postalCode,\r\n      default: makeDefault,\r\n    };\r\n    console.log(data);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    document.querySelector(\".modal-overlay\").classList.add(\"hide\");\r\n    document.querySelector(\".add-address\").classList.add(\"hide\");\r\n  };\r\n\r\n  if (success) {\r\n    closeModal();\r\n  }\r\n\r\n  window.addEventListener(\"click\", (e) => {\r\n    if (e.target.classList.contains(\"modal-overlay\")) {\r\n      document.querySelector(\".modal-overlay\").classList.add(\"hide\");\r\n      document.querySelector(\".add-address\").classList.add(\"hide\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"modal-overlay hide add-address\">\r\n      <div className=\"modal-wrapper\">\r\n        <div className=\"modal-header\">\r\n          <span className=\"modal-title\">Add New Address</span>\r\n          <div className=\"modal-title__btn\">\r\n            <IoMdClose onClick={() => closeModal()} />\r\n          </div>\r\n        </div>\r\n        <div className=\"underline\" />\r\n        <form\r\n          className=\"shipping-form\"\r\n          onSubmit={(e) => handleSubmitAddress(e)}>\r\n          <div className=\"shipping-data\">\r\n            <div className=\"input-inline\">\r\n              <div className=\"input-group firstname\">\r\n                <label htmlFor=\"firstname\">First name</label>\r\n                <input\r\n                  value={firstname}\r\n                  onChange={(e) => setFirstname(e.target.value)}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"input-group lastname\">\r\n                <label htmlFor=\"lastname\">Last name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={lastname}\r\n                  onChange={(e) => setLastname(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group firstname\">\r\n              <label htmlFor=\"firstname\">Mobile number</label>\r\n              <div className=\"input-group phone\">\r\n                <div className=\"phone_code\">+254</div>\r\n                <input\r\n                  placeholder=\"E.g 79000000\"\r\n                  value={contact}\r\n                  onChange={(e) => setContact(e.target.value)}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group address\">\r\n              <label htmlFor=\"address\">Address</label>\r\n              <textarea\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"input-group apartment\">\r\n              <label htmlFor=\"apartment\">Apartment, suite, etc.</label>\r\n              <input\r\n                value={apartment}\r\n                onChange={(e) => setApartment(e.target.value)}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"input-inline\">\r\n              <div className=\"input-group state\">\r\n                <label htmlFor=\"city\">County / Region *</label>\r\n                <select\r\n                  onChange={(e) => setCounty(e.target.value)}\r\n                  loading={counties.length < 1}>\r\n                  <option value=\"0\">Please select...</option>\r\n                  {counties &&\r\n                    counties.map((item) => (\r\n                      <option key={item.k} value={item.value}>\r\n                        {item.text}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"input-group city\">\r\n                <label htmlFor=\"city\">City *</label>\r\n                <select\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                  loading={cities.length < 1}>\r\n                  <option value=\"0\">Please select...</option>\r\n                  {cities &&\r\n                    cities.map((item) => (\r\n                      <option key={item.k} value={item.value}>\r\n                        {item.text}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-default\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={makeDefault === true ? true : false}\r\n                onChange={() => setMakeDefault(!makeDefault)}\r\n              />\r\n              <span>Make this default address?</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"checkout-nav\">\r\n            <Button\r\n              loading={saving}\r\n              disabled={saving}\r\n              type=\"submit\"\r\n              className=\"checkbox-btn\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.address.loading,\r\n  success: state.address.success,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addAddress })(AddAddress);\r\n"]},"metadata":{},"sourceType":"module"}