{"ast":null,"code":"var _jsxFileName = \"D:\\\\download\\\\.New folder (2)\\\\luxurysilk\\\\src\\\\layouts\\\\Stripe.js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport React from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { Container } from \"semantic-ui-react\"; // Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\nconst stripe = useStripe();\nconst elements = useElements();\n\nconst handleSubmit = event => {\n  // Block native form submission.\n  event.preventDefault();\n\n  if (!stripe || !elements) {\n    // Stripe.js has not loaded yet. Make sure to disable\n    // form submission until Stripe.js has loaded.\n    return;\n  } // Get a reference to a mounted CardElement. Elements knows how\n  // to find your CardElement because there can only ever be one of\n  // each type of element.\n\n\n  const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n  const {\n    error,\n    paymentMethod\n  } = stripe.createPaymentMethod({\n    type: \"card\",\n    card: cardElement\n  });\n\n  if (error) {\n    console.log(\"[error]\", error);\n  } else {\n    console.log(\"[PaymentMethod]\", paymentMethod);\n  }\n};\n\nconst CheckoutForm = () => /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CardElement, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"submit\",\n  disabled: !stripe,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, \"Pay\"));\n\nconst Stripe = () => {\n  return /*#__PURE__*/React.createElement(Container, {\n    text: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Stripe;","map":{"version":3,"sources":["D:/download/.New folder (2)/luxurysilk/src/layouts/Stripe.js"],"names":["Elements","loadStripe","React","CardElement","useStripe","useElements","Container","stripePromise","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","CheckoutForm","Stripe"],"mappings":";AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CAEA;AACA;;AAEA,MAAMC,aAAa,GAAGN,UAAU,CAAC,kCAAD,CAAhC;AAEA,MAAMO,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAMK,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,MAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACAA,EAAAA,KAAK,CAACC,cAAN;;AAEA,MAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,GAR6B,CAU9B;AACA;AACA;;;AACA,QAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBX,WAApB,CAApB,CAb8B,CAe9B;;AACA,QAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BR,MAAM,CAACS,mBAAP,CAA2B;AAC1DC,IAAAA,IAAI,EAAE,MADoD;AAE1DC,IAAAA,IAAI,EAAEN;AAFoD,GAA3B,CAAjC;;AAKA,MAAIE,KAAJ,EAAW;AACTK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,GAFD,MAEO;AACLK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACD;AACF,CA1BD;;AA4BA,MAAMM,YAAY,GAAG,mBACnB;AAAM,EAAA,QAAQ,EAAEZ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,QAAQ,EAAE,CAACF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;;AASA,MAAMe,MAAM,GAAG,MAAM;AACnB,sBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEhB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD;;AAUA,eAAegB,MAAf","sourcesContent":["import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport React from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\n\r\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\r\n\r\nconst stripe = useStripe();\r\nconst elements = useElements();\r\n\r\nconst handleSubmit = (event) => {\r\n  // Block native form submission.\r\n  event.preventDefault();\r\n\r\n  if (!stripe || !elements) {\r\n    // Stripe.js has not loaded yet. Make sure to disable\r\n    // form submission until Stripe.js has loaded.\r\n    return;\r\n  }\r\n\r\n  // Get a reference to a mounted CardElement. Elements knows how\r\n  // to find your CardElement because there can only ever be one of\r\n  // each type of element.\r\n  const cardElement = elements.getElement(CardElement);\r\n\r\n  // Use your card Element with other Stripe.js APIs\r\n  const { error, paymentMethod } = stripe.createPaymentMethod({\r\n    type: \"card\",\r\n    card: cardElement,\r\n  });\r\n\r\n  if (error) {\r\n    console.log(\"[error]\", error);\r\n  } else {\r\n    console.log(\"[PaymentMethod]\", paymentMethod);\r\n  }\r\n};\r\n\r\nconst CheckoutForm = () => (\r\n  <form onSubmit={handleSubmit}>\r\n    <CardElement />\r\n    <button type=\"submit\" disabled={!stripe}>\r\n      Pay\r\n    </button>\r\n  </form>\r\n);\r\n\r\nconst Stripe = () => {\r\n  return (\r\n    <Container text>\r\n      <Elements stripe={stripePromise}>\r\n        <CheckoutForm />\r\n      </Elements>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Stripe;\r\n"]},"metadata":{},"sourceType":"module"}