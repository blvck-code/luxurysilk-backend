{"ast":null,"code":"import { SAVE_ADDRESS_SUCCESS, SAVE_ADDRESS_ERROR, FETCH_ADDRESS_LOADING, FETCH_ADDRESS_SUCCESS, FETCH_ADDRESS_ERROR, ADD_ADDRESS_LOADING, ADD_ADDRESS_SUCCESS, ADD_ADDRESS_ERROR, LOGOUT_SUCCESS, DELETE_ADDRESS_LOADING, DELETE_ADDRESS_SUCCESS, DELETE_ADDRESS_ERROR } from \"../types\";\nconst initialState = {\n  loading: false,\n  success: false,\n  address: [],\n  error: null\n};\nexport default function (state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case FETCH_ADDRESS_LOADING:\n      return { ...state,\n        loading: true,\n        success: false\n      };\n\n    case FETCH_ADDRESS_SUCCESS:\n      return { ...state,\n        loading: false,\n        address: payload,\n        success: false\n      };\n\n    case FETCH_ADDRESS_ERROR:\n      return { ...state,\n        loading: false,\n        error: payload,\n        success: false\n      };\n\n    case ADD_ADDRESS_LOADING:\n      return { ...state,\n        loading: true,\n        success: false\n      };\n\n    case ADD_ADDRESS_SUCCESS:\n      return { ...state,\n        loading: false,\n        address: [payload, ...state.address],\n        success: true\n      };\n\n    case ADD_ADDRESS_ERROR:\n      return { ...state,\n        loading: false,\n        error: payload,\n        success: false\n      };\n\n    case DELETE_ADDRESS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case DELETE_ADDRESS_SUCCESS:\n      return { ...state,\n        loading: false,\n        address: state.address.filter(address => address.id !== payload)\n      };\n\n    case DELETE_ADDRESS_ERROR:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case LOGOUT_SUCCESS:\n      return {\n        loading: false,\n        success: false,\n        address: [],\n        error: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/download/.New folder (2)/hair shop/UI/src/redux/reducers/address.js"],"names":["SAVE_ADDRESS_SUCCESS","SAVE_ADDRESS_ERROR","FETCH_ADDRESS_LOADING","FETCH_ADDRESS_SUCCESS","FETCH_ADDRESS_ERROR","ADD_ADDRESS_LOADING","ADD_ADDRESS_SUCCESS","ADD_ADDRESS_ERROR","LOGOUT_SUCCESS","DELETE_ADDRESS_LOADING","DELETE_ADDRESS_SUCCESS","DELETE_ADDRESS_ERROR","initialState","loading","success","address","error","state","type","payload","filter","id"],"mappings":"AAAA,SACEA,oBADF,EAEEC,kBAFF,EAGEC,qBAHF,EAIEC,qBAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,mBAPF,EAQEC,iBARF,EASEC,cATF,EAUEC,sBAVF,EAWEC,sBAXF,EAYEC,oBAZF,QAaO,UAbP;AAeA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgC;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAhC,EAAmD;AAChE,UAAQD,IAAR;AACE,SAAKhB,qBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELJ,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,qBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,OAAO,EAAEI,OAHJ;AAILL,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLG,QAAAA,KAAK,EAAEG,OAHF;AAILL,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKT,mBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,mBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,OAAO,EAAE,CAACI,OAAD,EAAU,GAAGF,KAAK,CAACF,OAAnB,CAHJ;AAILD,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKP,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLG,QAAAA,KAAK,EAAEG,OAHF;AAILL,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKL,sBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,sBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcK,MAAd,CAAsBL,OAAD,IAAaA,OAAO,CAACM,EAAR,KAAeF,OAAjD;AAHJ,OAAP;;AAKF,SAAKR,oBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLG,QAAAA,KAAK,EAAEG;AAHF,OAAP;;AAKF,SAAKX,cAAL;AACE,aAAO;AACLK,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,OAAO,EAAE,EAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF;AACE,aAAOC,KAAP;AAlEJ;AAoED","sourcesContent":["import {\r\n  SAVE_ADDRESS_SUCCESS,\r\n  SAVE_ADDRESS_ERROR,\r\n  FETCH_ADDRESS_LOADING,\r\n  FETCH_ADDRESS_SUCCESS,\r\n  FETCH_ADDRESS_ERROR,\r\n  ADD_ADDRESS_LOADING,\r\n  ADD_ADDRESS_SUCCESS,\r\n  ADD_ADDRESS_ERROR,\r\n  LOGOUT_SUCCESS,\r\n  DELETE_ADDRESS_LOADING,\r\n  DELETE_ADDRESS_SUCCESS,\r\n  DELETE_ADDRESS_ERROR,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  success: false,\r\n  address: [],\r\n  error: null,\r\n};\r\n\r\nexport default function (state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case FETCH_ADDRESS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        success: false,\r\n      };\r\n    case FETCH_ADDRESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        address: payload,\r\n        success: false,\r\n      };\r\n    case FETCH_ADDRESS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n        success: false,\r\n      };\r\n    case ADD_ADDRESS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        success: false,\r\n      };\r\n    case ADD_ADDRESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        address: [payload, ...state.address],\r\n        success: true,\r\n      };\r\n    case ADD_ADDRESS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n        success: false,\r\n      };\r\n    case DELETE_ADDRESS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case DELETE_ADDRESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        address: state.address.filter((address) => address.id !== payload),\r\n      };\r\n    case DELETE_ADDRESS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: false,\r\n        address: [],\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}