{"ast":null,"code":"import { authAxios } from \"../../utils\";\nimport { addressListURL, addAddressURL, deleteAddressURL } from \"../../constant\";\nimport { ADD_ADDRESS_LOADING, ADD_ADDRESS_SUCCESS, ADD_ADDRESS_ERROR, FETCH_ADDRESS_LOADING, FETCH_ADDRESS_SUCCESS, FETCH_ADDRESS_ERROR, DELETE_ADDRESS_LOADING, DELETE_ADDRESS_SUCCESS, DELETE_ADDRESS_ERROR } from \"../types\";\nexport const fetchAddress = () => dispatch => {\n  dispatch({\n    type: FETCH_ADDRESS_LOADING\n  });\n  authAxios.get(addressListURL).then(res => {\n    dispatch({\n      type: FETCH_ADDRESS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_ADDRESS_ERROR,\n      payload: err\n    });\n  });\n};\nexport const addAddress = data => dispatch => {\n  dispatch({\n    type: ADD_ADDRESS_LOADING\n  });\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  console.log(addAddressURL);\n  authAxios.post(addAddressURL, data, config).then(res => {\n    dispatch({\n      type: ADD_ADDRESS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_ADDRESS_ERROR,\n      payload: err\n    });\n  });\n};\nexport const deleteAddress = id => dispatch => {\n  dispatch({\n    type: DELETE_ADDRESS_LOADING\n  });\n  authAxios.delete(deleteAddressURL(id)).then(res => {\n    dispatch({\n      type: DELETE_ADDRESS_SUCCESS,\n      payload: id\n    });\n  }).catch(err => {\n    dispatch({\n      type: DELETE_ADDRESS_ERROR,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["D:/download/.New folder (2)/luxurysilk/src/redux/action/address.js"],"names":["authAxios","addressListURL","addAddressURL","deleteAddressURL","ADD_ADDRESS_LOADING","ADD_ADDRESS_SUCCESS","ADD_ADDRESS_ERROR","FETCH_ADDRESS_LOADING","FETCH_ADDRESS_SUCCESS","FETCH_ADDRESS_ERROR","DELETE_ADDRESS_LOADING","DELETE_ADDRESS_SUCCESS","DELETE_ADDRESS_ERROR","fetchAddress","dispatch","type","get","then","res","payload","data","catch","err","addAddress","config","headers","console","log","post","deleteAddress","id","delete"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SACEC,cADF,EAEEC,aAFF,EAGEC,gBAHF,QAIO,gBAJP;AAKA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,mBANF,EAOEC,sBAPF,EAQEC,sBARF,EASEC,oBATF,QAUO,UAVP;AAYA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER;AADC,GAAD,CAAR;AAGAP,EAAAA,SAAS,CACNgB,GADH,CACOf,cADP,EAEGgB,IAFH,CAESC,GAAD,IAAS;AACbJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,qBADC;AAEPW,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAID,GAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPU,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GAbH;AAcD,CAlBM;AAoBP,OAAO,MAAMC,UAAU,GAAIH,IAAD,IAAWN,QAAD,IAAc;AAChDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEX;AADC,GAAD,CAAR;AAIA,QAAMoB,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYzB,aAAZ;AAEAF,EAAAA,SAAS,CACN4B,IADH,CACQ1B,aADR,EACuBkB,IADvB,EAC6BI,MAD7B,EAEGP,IAFH,CAESC,GAAD,IAAS;AACbJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,mBADC;AAEPc,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,KAAD,CAAR;AAID,GAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,iBADC;AAEPa,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GAbH;AAcD,CA3BM;AA6BP,OAAO,MAAMO,aAAa,GAAIC,EAAD,IAAShB,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEL;AADC,GAAD,CAAR;AAGAV,EAAAA,SAAS,CACN+B,MADH,CACU5B,gBAAgB,CAAC2B,EAAD,CAD1B,EAEGb,IAFH,CAESC,GAAD,IAAS;AACbJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,sBADC;AAEPQ,MAAAA,OAAO,EAAEW;AAFF,KAAD,CAAR;AAID,GAPH,EAQGT,KARH,CAQUC,GAAD,IAAS;AACdR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,oBADC;AAEPO,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GAbH;AAcD,CAlBM","sourcesContent":["import { authAxios } from \"../../utils\";\r\nimport {\r\n  addressListURL,\r\n  addAddressURL,\r\n  deleteAddressURL,\r\n} from \"../../constant\";\r\nimport {\r\n  ADD_ADDRESS_LOADING,\r\n  ADD_ADDRESS_SUCCESS,\r\n  ADD_ADDRESS_ERROR,\r\n  FETCH_ADDRESS_LOADING,\r\n  FETCH_ADDRESS_SUCCESS,\r\n  FETCH_ADDRESS_ERROR,\r\n  DELETE_ADDRESS_LOADING,\r\n  DELETE_ADDRESS_SUCCESS,\r\n  DELETE_ADDRESS_ERROR,\r\n} from \"../types\";\r\n\r\nexport const fetchAddress = () => (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_ADDRESS_LOADING,\r\n  });\r\n  authAxios\r\n    .get(addressListURL)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: FETCH_ADDRESS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: FETCH_ADDRESS_ERROR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_ADDRESS_LOADING,\r\n  });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  console.log(addAddressURL);\r\n\r\n  authAxios\r\n    .post(addAddressURL, data, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_ADDRESS_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ADD_ADDRESS_ERROR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteAddress = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: DELETE_ADDRESS_LOADING,\r\n  });\r\n  authAxios\r\n    .delete(deleteAddressURL(id))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: DELETE_ADDRESS_SUCCESS,\r\n        payload: id,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: DELETE_ADDRESS_ERROR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}